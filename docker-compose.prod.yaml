services:
  backend:
    container_name: backend
    image: 850995544968.dkr.ecr.eu-north-1.amazonaws.com/webapp:backend-prod-latest-update
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}
      - FRONTEND_PORT_SSL=${FRONTEND_PORT_SSL}
      - PORT=${BACKEND_PORT}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB=${DB_NAME}
      - AI_KEY=${AI_KEY}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - ENV=production
      - COOKIE_NAME=${COOKIE_NAME}
      - COOKIE_EXPIRATION=${COOKIE_EXPIRATION}
      - REFRESH_COOKIE_EXPIRATION=${REFRESH_COOKIE_EXPIRATION}
      - JWT_SECRET=${JWT_SECRET}
      - SALT_ROUNDS=${SALT_ROUNDS}
      - FRONTEND_URL_PROD=${FRONTEND_URL_PROD}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - ERROR_LOG=${ERROR_LOG}
      - COMBINED_LOG=${COMBINED_LOG}
    restart: always
    volumes:
      - ./backend/app/logs:/backend/app/logs
      - ./backend:/app
    depends_on:
      - db
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - app_network

  frontend:
    container_name: frontend
    image: 850995544968.dkr.ecr.eu-north-1.amazonaws.com/webapp:frontend-prod-latest-update
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./ssl/:/etc/ssl/
      - ./frontend/nginx.conf.template:/etc/nginx/conf.d/default.conf.template
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
    restart: always
    depends_on:
      - backend
    networks:
      - app_network

  db:
    image: postgres:17.0
    container_name: database
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    volumes:
      - pgdataprod:/var/lib/postgresql/data
    networks:
      - app_network

networks:
  app_network:

volumes:
  pgdataprod:
